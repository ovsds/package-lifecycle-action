version: 3

silent: true

vars:
  NENV: "node_modules"

includes:
  github_test_images:
    dir: tests/integration/.test_images
    taskfile: tests/integration/.test_images

tasks:
  _prettier:
    internal: true
    cmds:
      - "{{.NENV}}/.bin/prettier {{.COMMAND}}"

  _with_nvm:
    internal: true
    cmds:
      - "source ${HOME}/.nvm/nvm.sh && nvm install && {{.COMMAND}}"

  init:
    desc: Initialize project environment
    cmds:
      - echo 'Installing node dependencies...'
      - task: _with_nvm
        vars: { COMMAND: "npm install" }

      - echo 'Installing husky pre-commit...'
      - task: _with_nvm
        vars: { COMMAND: "npm run prepare" }

  lint:
    desc: Lint project
    cmds:
      - task: _with_nvm
        vars: { COMMAND: "npm run lint:check" }

  lint-fix:
    desc: Lint fix project
    cmds:
      - task: _with_nvm
        vars: { COMMAND: "npm run lint:fix" }

  test:
    desc: Test project
    cmds:
      - task: _with_nvm
        vars: { COMMAND: "npm run test" }

  package:
    desc: Pack project
    cmds:
      - task: _with_nvm
        vars: { COMMAND: "npm run package" }

  clean:
    desc: Clean project environment
    cmds:
      - echo 'Cleaning node dependencies...'
      - rm -rf {{.NENV}}

  dependencies-update:
    desc: Update dependencies
    cmds:
      - echo 'Updating node dependencies...'
      - task: _with_nvm
        vars: { COMMAND: "npm update" }
      - task: _with_nvm
        vars: { COMMAND: "npm outdated" }

  dependencies-check:
    desc: Check dependencies
    cmds:
      - echo 'Checking node dependencies...'
      - task: _with_nvm
        vars: { COMMAND: "npm audit" }

  update-from-template:
    desc: Update project from template
    cmds:
      - echo 'Updating project from template...'
      - cookiecutter
        --no-input
        --overwrite-if-exists
        --output-dir ../
        {{.TEMPLATE_PATH}}
        project_name='Package Lifecycle Action'
        project_slug='package-lifecycle-action'
        marketplace_name='Package Lifecycle'
        action_type='node20'
        node_version='v20.15.1'
        owner_name='Dmitry Ovsiannikov'
        owner_github_login='ovsds'
    vars:
      TEMPLATE_PATH: '{{.TEMPLATE_PATH | default "https://github.com/ovsds/template-repository-github-action"}}'

  login-gh-cli:
    desc: Login to GitHub CLI
    cmds:
      - echo 'Logging to GitHub CLI...'
      - gh auth login
        --scopes=read:packages,write:packages,delete:packages
        --hostname github.com
        --git-protocol https
        --web

  login-ghcr:
    desc: Login to GitHub Container Registry
    cmds:
      - echo 'Logging to GitHub Container Registry...'
      - gh config get -h github.com oauth_token | docker login ghcr.io -u USERNAME --password-stdin
